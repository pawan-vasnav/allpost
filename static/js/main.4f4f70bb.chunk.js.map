{"version":3,"sources":["component/homepage.js","container/App.js","component/constant.js","component/newtask/PostForm.js","component/newtask/Post.js","component/newtask/EditComponent.js","component/newtask/AllPost.js","component/completetask/completeTask.js","component/completetask/complete.js","counter/increment.js","api/fetchApi.js","sagas/userSaga.js","api/TableHeader.js","api/TableBody.js","api/userinfo.js","routes.js","reducer/postReducer.js","reducer/arithReducer.js","reducer/userdataReducer.js","configStore.js","index.js"],"names":["HomePage","className","to","App","ADD_POST","UPDATE","INCREMENT","DECREMENT","RESET","ALL_DATA","USER","PostForm","handleSubmit","e","preventDefault","title","getTitle","value","message","getMessage","data","id","Date","editing","props","dispatch","type","onSubmit","this","required","ref","input","placeholder","rows","cols","Component","connect","Post","post","onClick","EditComponent","handleEdit","newTitle","newMessage","key","defaultValue","AllPost","posts","map","state","todo","newTaskArray","CompTask","Complete","completeTaskArray","Increment","increment","decrement","reset","counter","UserData","fetch","then","response","json","searchUser","watchSearchUser","console","log","call","userArray","put","takeLatest","infoTable","TableHeader","row","i","TableBody","user","name","username","email","phone","website","UserInfo","Routes","path","component","complete","initialState","postReducer","action","filter","update","arithReducer","UserReducer","composeEnhancer","compose","reducer","combineReducers","store","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","runSaga","run","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f4f70bb.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HomePage = () => (\n    <div className=\"center\">\n        <h1 >Welcome, Create your todo list with us</h1>\n        <h3>We will provide you Best solution for your todo</h3>\n        <div className=\"todo_home\">\n            <Link to=\"/add_todo\">\n                <button className=\"btnhome\">Add Task Here</button>\n            </Link><br />\n            <Link to=\"/checkAddedTodo\">\n                <button className=\"btnhome\">Check Added Task</button>\n            </Link><br />\n            <Link to = \"/completeTask\">\n                <button className=\"btnhome\">Completed Task</button>\n            </Link>\n            <Link to = \"/counter\">\n                <button className=\"btnhome\">Counter</button>\n            </Link>\n            <Link to = \"/userdata\">\n                <button className=\"btnhome\">UserInfo</button>\n            </Link>\n        </div>\n    </div>\n);\nexport default HomePage;\n\n\n\n// import { useHistory } from \"react-router-dom\";\n\n// function HomePage() {\n//     let history = useHistory();\n\n//     function handleClick() {\n//         history.push(\"/checkAddedTodo\");\n//     }\n\n//     return (\n//         <div className=\"center\">\n//             <h1 >Welcome, Create your todo list with us</h1>\n//             <h3>We will provide you Best solution for your todo</h3>\n//             <div className=\"todo_home\">\n//                 <Link to=\"/add_todo\">\n//                     <button className=\"btnhome\">Add Task Here</button>\n//                 </Link><br />\n//                 <Link to=\"/checkAddedTodo\">\n//                     <button className=\"btnhome\">Check Added Task</button>\n//                 </Link><br />\n//                 <Link to=\"/completeTask\">\n//                     <button className=\"btnhome\">Completed Task</button>\n//                 </Link>\n//             </div>\n//             <button type=\"button\" onClick={handleClick}>\n//                 Go home\n//             </button>\n//         </div>\n\n//     )\n// }\n\n","\nimport React from 'react';\nimport HomePage from '../component/homepage';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <HomePage />\n    </div>\n  );\n}\nexport default App;","export const ADD_POST='ADD_POST';\nexport const DELETE_POST='DELETE_POST';\nexport const EDIT_POST='EDIT_POST';\nexport const UPDATE='UPDATE';\nexport const COMPLETE='COMPLETE';\nexport const INCREMENT='INCREMENT';\nexport const DECREMENT='DECREMENT';\nexport const RESET='RESET';\nexport const ALL_DATA='ALL_DATA';\nexport const USER='USER';\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport  { ADD_POST }  from '../constant';\n\nclass PostForm extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const title = this.getTitle.value;\n    const message = this.getMessage.value;\n    const data = {\n      id: new Date(),\n      title,\n      message,\n      editing: false\n    }\n    this.props.dispatch({\n      type: ADD_POST,\n      data\n    })\n    this.getTitle.value = '';\n    this.getMessage.value = '';\n  }\n  render() {\n    return (\n      <div className=\"post-container\">\n        <h1 className=\"post_heading\">Add Todo</h1>\n        <form className=\"form\" onSubmit={this.handleSubmit} >\n          <input required type=\"text\" ref={(input) => this.getTitle = input}\n            placeholder=\"Enter Todo Title\" /><br /><br />\n          <textarea required rows=\"5\" ref={(input) => this.getMessage = input}\n            cols=\"28\" placeholder=\"Enter Description\" /><br /><br />\n          <span>\n            <button>Add</button>\n            <Link to=\"/checkAddedTodo\">\n              <button>Goto List</button>\n            </Link>\n            <Link to=\"/\">\n              <button>Home</button>\n            </Link>\n          </span>\n        </form>\n      </div>\n    );\n  }\n}\nexport default connect()(PostForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport  { EDIT_POST, COMPLETE,DELETE_POST}  from '../constant';\n\nclass Post extends Component {\n  render() {\n    const { post }=this.props;\n    return (\n      <div className=\"post\">\n        <h2 className=\"post_title\">{post.title}</h2>\n        <p className=\"post_message\">{post.message}</p>\n        <div className=\"control-buttons\">\n          <button className=\"edit\"\n            onClick={() => this.props.dispatch({ type: EDIT_POST, id: post.id })\n            }\n          >Edit</button>\n\n          <button className=\"completedd\"\n           onClick={() => \n            this.props.dispatch({ type: COMPLETE, id: post.id \n          })\n          }>Complete</button>\n       \n          <button className=\"delete\"\n            onClick={() => \n              this.props.dispatch({ type: DELETE_POST, id: post.id })}\n            \n          >Delete</button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default connect()(Post);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport  { UPDATE }  from '../constant';\n\n\n\nclass EditComponent extends Component {\n  handleEdit = (e) => {\n    const { post } = this.props;\n    e.preventDefault();\n    const newTitle = this.getTitle.value;\n    const newMessage = this.getMessage.value;\n    const data = {\n      newTitle,\n      newMessage\n    }\n    this.props.dispatch({ type: UPDATE, id: post.id, data: data })\n  }\n  render() {\n    const { post } = this.props;\n    return (\n      <div key={post.id} className=\"post\">\n        <form className=\"form\" onSubmit={this.handleEdit}>\n          <input required type=\"text\" ref={(input) => this.getTitle = input}\n            defaultValue={post.title} placeholder=\"Enter Post Title\" /><br /><br />\n          <textarea required rows=\"5\" ref={(input) => this.getMessage = input}\n            defaultValue={post.message} cols=\"28\" placeholder=\"Enter Post\" /><br /><br />\n          <button>Update</button>\n        </form>\n      </div>\n    );\n  }\n}\nexport default connect()(EditComponent);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Post from './Post';\nimport EditComponent from './EditComponent';\nimport { Link } from 'react-router-dom';\n\n\nclass AllPost extends Component {\n  render() {\n    const {posts} = this.props;\n    return (\n      <div className=\"post-container\">\n        <span className=\"btnCont\">\n          <Link to=\"/add_todo\">\n            <button className=\"backButton\">Go Back</button>\n          </Link>\n          <Link to=\"/\">\n            <button className=\"backButton\">Home</button>\n          </Link>\n        </span>\n        <h1 className=\"post_heading\">All Posts</h1>\n        {posts.map((post) => (\n          <div key={post.id}>\n            {post.editing ? <EditComponent post={post} key={post.id} /> : <Post post={post} key={post.id} />}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.todo.newTaskArray\n  }\n}\nexport default connect(mapStateToProps)(AllPost);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass CompTask extends Component {\n    render() {\n        const { post }= this.props;\n        return (\n            <div className=\"post\">\n                <h2 className=\"post_title\">{post.title}</h2>\n                <p className=\"post_message\">{post.message}</p>\n            </div>\n        )\n    }\n}\nexport default connect()(CompTask);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CompTask from './completeTask';\n\n\nclass Complete extends Component {\n\n    // shouldComponentUpdate() {\n    //     return false;\n    //   }\n    render() {\n        const { posts }= this.props;\n        return (\n            <div className=\"post-container\">\n                <Link to=\"/\">\n                    <button className=\"backButton\">Go Back</button>\n                </Link>\n                <h1 className=\"post_heading\">Comleted Task</h1>\n                {posts.map((post) => (\n                    <div key={post.id}>\n                        <CompTask post={post} key={post.id} />\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.todo.completeTaskArray\n    }\n}\nexport default connect(mapStateToProps)(Complete);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { INCREMENT,DECREMENT,RESET} from '../component/constant'\n\nclass Increment extends Component {\n    increment = () => {\n        this.props.dispatch({ type: INCREMENT })\n    }\n    decrement = () => {\n        this.props.dispatch({ type: DECREMENT })\n    }\n    reset = () => {\n        this.props.dispatch({ type: RESET })\n    }\n    render() {\n\n        return (\n            <div className=\"incdec\">\n\n                <Link to=\"/\">\n                    <button className=\"backButton\">Back</button>\n                </Link>\n\n                <h1>INCREMENT AND DECREMENT EXAMPLE</h1>\n                <h2 id=\"new\">{this.props.posts}</h2>\n                <button className=\"btn\" onClick={this.increment}>INCREMENT</button>\n                <button className=\"btn\" onClick={this.decrement}>DECREMENT</button>\n                <button className=\"btn\" onClick={this.reset}>RESET</button>\n\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.counter\n    }\n}\nexport default connect(mapStateToProps)(Increment);","\n\nconst UserData = () => {\n    return fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => {\n                return response.json()\n            }).then(json => {\n                // return json.map(({\n                //     id,\n                //     name,\n                //     phone\n                // }) => ({\n                //     id,\n                //     name,\n                //     phone\n                // }))\n                return json;\n            })\n};\nexport default UserData;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { connect } from 'react-redux';\n\n// const UserData = () => {\n//     return fetch('https://jsonplaceholder.typicode.com/users')\n//         .then(response => {\n//             return response.json()\n//         })\n//         .then(json => {\n//             return json;\n//         })\n// };\n// export default connect()(UserData);\n","import { put, call,takeLatest } from 'redux-saga/effects';\nimport UserData from '../api/fetchApi';\nimport { ALL_DATA ,USER} from '../component/constant';\n\nexport const getAllUser=()=>(console.log(\"1\"),{\n    type:USER\n});\n\nexport  function* searchUser (){\n    console.log(\"2\")\n    const userArray= yield call(UserData);\n    yield put({type:ALL_DATA,userArray});\n}\nexport default function* watchSearchUser(){\n    console.log(\"3\")\n    yield takeLatest(USER,searchUser);\n}","import React from 'react';\n\nconst infoTable = [\"ID\", \"NAME\", \"USERNAME\", \"EMAIL\", \"PHONE\",\"WEBSITE\"];\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                {infoTable.map((row, i) => { return <th key={i}>{row}</th> })}\n            </tr>\n        </thead>\n    )\n}\nexport default TableHeader;","import React, { Component } from 'react';\n\nclass TableBody extends Component {\n    render() {\n        const { user } = this.props\n        let rows = user.map((row) =>\n            <tr key={row.id}>\n                <td className=\"tableRows\">{row.id}</td>\n                <td className=\"tableRows\">{row.name}</td>\n                <td className=\"tableRows\">{row.username}</td>\n                <td className=\"tableRows\">{row.email}</td>\n                <td className=\"tableRows\">{row.phone}</td>\n                <td className=\"tableRows\">{row.website}</td>\n            </tr>\n        )\n        return (\n            <tbody>{rows}</tbody>\n        )\n\n    }\n}\nexport default TableBody;","import { getAllUser } from '../sagas/userSaga';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport TableHeader from './TableHeader';\nimport TableBody from './TableBody';\n\n\nclass UserInfo extends Component {\n  componentDidMount() {\n    this.props.dispatch(getAllUser())\n  }\n  render() {\n    const  post  = this.props.post;\n    return (\n      <div className=\"data\">\n        <Link to=\"/\">\n          <button className=\"userbtn\">Back</button>\n        </Link>\n        <table className=\"addingTaskTable\">\n          <TableHeader/>\n          <TableBody user={post}/>\n        </table>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    post: state.user\n  }\n}\nexport default connect(mapStateToProps)(UserInfo);","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport App from './container/App';\nimport PostForm from './component/newtask/PostForm';\nimport AllPost from './component/newtask/AllPost';\nimport complete from './component/completetask/complete';\nimport Increment from './counter/increment';\nimport UserInfo from './api/userinfo';\n\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route path=\"/add_todo\" component={PostForm} />\n            <Route path=\"/checkAddedTodo\" component={AllPost} />\n            <Route path=\"/counter\" component={Increment} />\n            <Route path=\"/completeTask\" component={complete} />\n            <Route path =\"/userdata\" component={UserInfo}/>\n            <Route path=\"/\" component={App} />\n            <Redirect to=\"/\" />\n        </Switch>\n    );\n};\n\nexport default Routes;","import { ADD_POST, DELETE_POST, EDIT_POST, UPDATE, COMPLETE } from '../component/constant';\n\n\nconst initialState = {\n    newTaskArray: [],\n    completeTaskArray: []\n}\nconst postReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            return {\n                ...state,\n                newTaskArray: [...state.newTaskArray, action.data]\n            }\n        case DELETE_POST:\n            return {\n                ...state,\n                newTaskArray: [...state.newTaskArray.filter((post) => post.id !== action.id)]\n            }\n        case EDIT_POST:\n            return {\n                ...state,\n                newTaskArray: [...state.newTaskArray.map((post) => post.id === action.id ? { ...post, editing: !post.editing } : post)]\n            }\n        case UPDATE:\n            let update = state.newTaskArray.map((post) => {\n                if (post.id === action.id) {\n                    return {\n                        ...post,\n                        title: action.data.newTitle,\n                        message: action.data.newMessage,\n                        editing: !post.editing\n                    }\n                } else return post\n            })\n            return {\n                ...state,\n                newTaskArray: [...update]\n            }\n        case COMPLETE:\n            let complete = state.newTaskArray.filter((post) => post.id === action.id)\n            return {\n                ...state,\n                newTaskArray: [...state.newTaskArray.filter((post) => post.id !== action.id)],\n                completeTaskArray: [...state.completeTaskArray, ...complete]\n            }\n        default:\n            return state;\n    }\n}\n\nexport default postReducer;","import  { INCREMENT, DECREMENT, RESET}  from '../component/constant';\n\n\nconst arithReducer = (state = 0, action) => {\n    switch (action.type) {\n        case INCREMENT:\n            return state + 1;\n        case DECREMENT:\n            return state - 1;\n        case RESET:\n            return 0;\n        default:\n            return state;\n    }\n}\nexport default arithReducer;","import { ALL_DATA, USER } from '../component/constant';\nconst UserReducer = (state = [], action) => {\n    switch (action.type) {\n        case ALL_DATA:\n            return action.userArray\n        default:\n            console.log(\"4\")\n            return state;\n    }\n}\n\nexport default UserReducer;","import { createStore, compose ,combineReducers, applyMiddleware} from 'redux';\nimport postReducer from './reducer/postReducer';\nimport arithReducer from './reducer/arithReducer';\nimport UserReducer from './reducer/userdataReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport watchSearchUser from './sagas/userSaga';\n\n\n// const enhancers = compose(\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//     );\nconst composeEnhancer = (process.env.NODE_ENV === \"development\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducer = combineReducers({\n    counter:arithReducer,\n    todo:postReducer,\n    user:UserReducer\n})\n\nconst configureStore=()=>{\n    const sagaMiddleware = createSagaMiddleware();\n    return {\n        ...createStore(reducer,composeEnhancer(applyMiddleware(sagaMiddleware))),\n        runSaga:sagaMiddleware.run(watchSearchUser)\n\n    };\n};\n\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport Routes from './routes'\nimport { BrowserRouter } from 'react-router-dom';\nimport configureStore from './configStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <Routes />\n        </BrowserRouter>\n    </Provider>, document.getElementById('root'));"],"sourceRoot":""}